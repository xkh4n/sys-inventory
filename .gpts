Éste es el test que sigue fallando:

        it('should return status code 201 and a json object', async () => {
            const mockCountry = {
                _id: '60c72b2f4f1a4e1a5c8e5c44',
                iso_code: "CHL",
                name_country: "Chile"
            };
            const mockCity = {
                _id: '66b11a324553ddc98e1fb544',
                iso_code: "SCL",
                name_city: "Santiago",
                country: mockCountry._id
            };
            Country.findOne.mockResolvedValue(mockCountry);
            City.prototype.save = jest.fn().mockResolvedValue(mockCity);

            const response = await request(app).post('/api/1.0/cities/setcity').send(mockCity);
            expect(response.status).toBe(201);
            expect(response.body.code).toEqual('Ok');

            expect(response.body.dataMessage).toEqual(expect.objectContaining({
                "iso_code": "SCL",
                "name_city": "Santiago",
                "country": "60c72b2f4f1a4e1a5c8e5c44"
            }));
        });


Ésta es la función delcontrolador:

const setCity = async (req, res) => {
    try {
        const { iso_code, name_city, country } = req.body;
        const _country = await Countries.findOne({ iata_code: country });
        if (!_country) {
            throw new errors(406, 'País no encontrado');
        }
        
        const city = new Cities({
            iso_code: iso_code,
            name_city: name_city,
            country: _country._id
        });
        const ciudad = await city.save();
        const response = {
            "code": 'Ok',
            "dataMessage": city
        }
        res.status(201).json(response);
    } catch (error) {
        if (error instanceof errors) {
            res.status(error.code).send(error.getMessage());
        } else {
            const response = {
                "code": 500,
                "dataMessage": error.message
            }
            res.status(500).json(response);
        }
    }
}

Ésta del Insomnia al enviar los siguiete:

{
	"iso_code": "SCL",
	"name_city": "Santiago",
	"country": "CHL"
}

a la siguiente ruta:

'http://localhost(api/1.0/cities/setcity'

{
	"code": "Ok",
	"dataMessage": {
		"iso_code": "SCL",
		"name_city": "Santiago",
		"country": "66aede2e4298e6ed10e85a9b",
		"_id": "66b11a324553ddc98e1fb544",
		"__v": 0
	}
}


y ésta es la respuesta al ejecutar el test:

> sys-inventory@1.0.1 test
> NODE_ENV=tst_ jest

 PASS  test/countriesController.test.js
 FAIL  test/citiesController.test.js
  ● Cities Controller Test › New City › should return status code 201 and a json object

    TypeError: Cannot read properties of undefined (reading 'name_city')

      36 |             expect(response.status).toBe(201);
      37 |             expect(response.body.code).toEqual('Ok');
    > 38 |             logger.fatal(response.body.dataMessage.name_city);
         |                                                    ^
      39 |             expect(response.body.dataMessage.name_city).toEqual(expect.objectContaining({name_city: "Santiago"}));
      40 |         });
      41 |

      at Object.name_city (test/citiesController.test.js:38:52)

Test Suites: 1 failed, 1 passed, 2 total
Tests:       1 failed, 15 passed, 16 total
Snapshots:   0 total
Time:        1.248 s, estimated 2 s
Ran all test suites.
